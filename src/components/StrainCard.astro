---
import type { Strain } from '../types/strain';
import { Info, Activity, Star } from 'lucide-astro';

interface Props {
  strain: Strain;
}

const { strain } = Astro.props;

const strainUrl = `/strains/${strain.name.toLowerCase().replace(/\s+/g, '-')}`;

// Function to check if image URL is valid
function isValidImageUrl(url: string): boolean {
  return url && url !== '' && !url.includes('undefined') && !url.includes('null');
}

// Get top 3 effects
const topEffects = Object.entries(strain.effects.positive)
  .sort(([,a], [,b]) => b - a)
  .slice(0, 3);
---

<article class="group">
  <a href={strainUrl} class="block bg-white rounded-xl shadow-lg overflow-hidden transform transition-all duration-300 hover:shadow-xl hover:-translate-y-1">
    <div class="relative h-64 overflow-hidden">
      {isValidImageUrl(strain.img_url) ? (
        <img 
          src={strain.img_url} 
          alt={strain.name}
          loading="lazy"
          class="w-full h-full object-cover transform transition-transform duration-700 group-hover:scale-110"
        />
      ) : (
        <div class="w-full h-full bg-gradient-to-br from-primary-400 to-primary-600">
          <div class="absolute inset-0 bg-black/10"></div>
        </div>
      )}
      <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent"></div>
      <div class="absolute bottom-0 left-0 right-0 p-6">
        <div class="flex flex-wrap gap-2 mb-2">
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary-500/80 text-white backdrop-blur-sm">
            {strain.type}
          </span>
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary-500/80 text-white backdrop-blur-sm">
            THC: {strain.thc_level}
          </span>
        </div>
        <h2 class="text-2xl font-bold text-white">{strain.name}</h2>
      </div>
    </div>

    <div class="p-6 space-y-4">
      <p class="text-gray-600 line-clamp-2">{strain.description}</p>

      <div class="space-y-3">
        <h3 class="text-sm font-semibold text-gray-700 flex items-center gap-2">
          <Star class="w-4 h-4 text-primary-600" /> Top Effects
        </h3>
        <div class="grid grid-cols-3 gap-2">
          {topEffects.map(([effect, percentage]) => (
            <div class="bg-primary-50 rounded-lg p-2 text-center">
              <span class="block text-sm text-gray-700 capitalize">{effect}</span>
              <span class="block text-primary-600 font-semibold text-sm">{percentage}%</span>
            </div>
          ))}
        </div>
      </div>

      <div class="pt-4 flex justify-between items-center border-t border-gray-100">
        <div class="flex items-center text-primary-600">
          <span class="text-sm font-medium">Learn more</span>
          <svg class="w-5 h-5 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </div>
      </div>
    </div>
  </a>
</article>

<style>
  .group:hover .bg-gradient-to-br {
    animation: gradientShift 3s ease infinite;
  }

  @keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
</style>