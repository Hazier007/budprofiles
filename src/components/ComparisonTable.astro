---
import type { Strain } from '../data/strains';

interface Props {
  strain1: Strain;
  strain2: Strain;
}

const { strain1, strain2 } = Astro.props;

function getTopEffects(strain: Strain, count: number = 5) {
  return Object.entries(strain.effects.positive)
    .sort(([,a], [,b]) => b - a)
    .slice(0, count);
}

function getTopMedical(strain: Strain, count: number = 5) {
  return Object.entries(strain.effects.medical)
    .sort(([,a], [,b]) => b - a)
    .slice(0, count);
}

const characteristics = [
  { label: 'Type', value1: strain1.type, value2: strain2.type },
  { label: 'THC Level', value1: strain1.thc_level, value2: strain2.thc_level },
  { label: 'Dominant Terpene', value1: strain1.most_common_terpene, value2: strain2.most_common_terpene }
];
---

<div class="comparison-section space-y-12">
  <!-- Characteristics -->
  <div class="bg-white rounded-xl shadow-lg overflow-hidden">
    <div class="p-8 bg-primary-50 border-b border-primary-100">
      <h3 class="text-2xl font-bold text-primary-800">Characteristics</h3>
    </div>
    <div class="grid grid-cols-2 divide-x divide-primary-100">
      <div class="p-8 space-y-8">
        <h4 class="text-xl font-semibold text-primary-700 mb-6">{strain1.name}</h4>
        {characteristics.map(({ label, value1 }) => (
          <div class="flex justify-between items-center">
            <span class="text-gray-600 font-medium">{label}</span>
            <span class="text-primary-700 font-semibold">{value1}</span>
          </div>
        ))}
      </div>
      <div class="p-8 space-y-8">
        <h4 class="text-xl font-semibold text-primary-700 mb-6">{strain2.name}</h4>
        {characteristics.map(({ label, value2 }) => (
          <div class="flex justify-between items-center">
            <span class="text-gray-600 font-medium">{label}</span>
            <span class="text-primary-700 font-semibold">{value2}</span>
          </div>
        ))}
      </div>
    </div>
  </div>

  <!-- Effects -->
  <div class="bg-white rounded-xl shadow-lg overflow-hidden">
    <div class="p-8 bg-primary-50 border-b border-primary-100">
      <h3 class="text-2xl font-bold text-primary-800">Top Effects</h3>
    </div>
    <div class="grid grid-cols-2 divide-x divide-primary-100">
      <div class="p-8">
        <h4 class="text-xl font-semibold text-primary-700 mb-8">{strain1.name}</h4>
        <div class="space-y-6">
          {getTopEffects(strain1).map(([effect, percentage]) => (
            <div class="relative">
              <div class="flex justify-between mb-3">
                <span class="text-gray-700 capitalize">{effect}</span>
                <span class="text-primary-600 font-semibold">{percentage}%</span>
              </div>
              <div class="h-2 bg-primary-100 rounded-full overflow-hidden">
                <div 
                  class="h-full bg-primary-500 rounded-full transition-all duration-500"
                  style={`width: ${percentage}%`}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>
      <div class="p-8">
        <h4 class="text-xl font-semibold text-primary-700 mb-8">{strain2.name}</h4>
        <div class="space-y-6">
          {getTopEffects(strain2).map(([effect, percentage]) => (
            <div class="relative">
              <div class="flex justify-between mb-3">
                <span class="text-gray-700 capitalize">{effect}</span>
                <span class="text-primary-600 font-semibold">{percentage}%</span>
              </div>
              <div class="h-2 bg-primary-100 rounded-full overflow-hidden">
                <div 
                  class="h-full bg-primary-500 rounded-full transition-all duration-500"
                  style={`width: ${percentage}%`}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>

  <!-- Medical Benefits -->
  <div class="bg-white rounded-xl shadow-lg overflow-hidden">
    <div class="p-8 bg-primary-50 border-b border-primary-100">
      <h3 class="text-2xl font-bold text-primary-800">Medical Benefits</h3>
    </div>
    <div class="grid grid-cols-2 divide-x divide-primary-100">
      <div class="p-8">
        <h4 class="text-xl font-semibold text-primary-700 mb-8">{strain1.name}</h4>
        <div class="space-y-6">
          {getTopMedical(strain1).map(([effect, percentage]) => (
            <div class="relative">
              <div class="flex justify-between mb-3">
                <span class="text-gray-700 capitalize">{effect.replace(/_/g, ' ')}</span>
                <span class="text-primary-600 font-semibold">{percentage}%</span>
              </div>
              <div class="h-2 bg-primary-100 rounded-full overflow-hidden">
                <div 
                  class="h-full bg-primary-500 rounded-full transition-all duration-500"
                  style={`width: ${percentage}%`}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>
      <div class="p-8">
        <h4 class="text-xl font-semibold text-primary-700 mb-8">{strain2.name}</h4>
        <div class="space-y-6">
          {getTopMedical(strain2).map(([effect, percentage]) => (
            <div class="relative">
              <div class="flex justify-between mb-3">
                <span class="text-gray-700 capitalize">{effect.replace(/_/g, ' ')}</span>
                <span class="text-primary-600 font-semibold">{percentage}%</span>
              </div>
              <div class="h-2 bg-primary-100 rounded-full overflow-hidden">
                <div 
                  class="h-full bg-primary-500 rounded-full transition-all duration-500"
                  style={`width: ${percentage}%`}
                ></div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .comparison-section {
    animation: fadeIn 0.5s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .bg-primary-50 {
    position: relative;
    overflow: hidden;
  }

  .bg-primary-50::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 0%, rgba(75, 175, 100, 0.1) 100%);
    pointer-events: none;
  }
</style>